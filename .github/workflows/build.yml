name: Java CI with Maven

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/testdb
      SPRING_DATASOURCE_USERNAME: testuser
      SPRING_DATASOURCE_PASSWORD: testpass
      SPRING_PROFILES_ACTIVE: test

    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Configurar Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Cache de dependencias Maven
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven

      - name: Esperar a que PostgreSQL esté listo
        run: |
          for i in {1..10}; do
            nc -z localhost 5432 && echo "PostgreSQL listo" && break
            echo "Esperando PostgreSQL..."
            sleep 5
          done

      - name: Compilar y testear con Maven
        run: mvn clean verify

      - name: Publicar reporte de cobertura (JaCoCo)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: target/site/jacoco

  docker:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Construir imagen Docker
        run: docker build -t my-app:${{ github.sha }} .

      - name: Guardar imagen Docker como artefacto
        run: docker save my-app:${{ github.sha }} | gzip > image.tar.gz

      - name: Subir imagen Docker como artefacto
        uses: actions/upload-artifact@v4
        with:
          name: docker-image
          path: image.tar.gz
